{
  "version": 4,
  "terraform_version": "1.13.2",
  "serial": 40,
  "lineage": "3e0f39b1-f9cd-a454-28ff-f703ff8d4ad5",
  "outputs": {
    "inventory": {
      "value": "# K3s Production Cluster - Ansible Inventory\n# Generated by Terraform\n\n[all:vars]\nansible_user=ubuntu\nansible_ssh_private_key_file=~/.ssh/id_rsa\nansible_ssh_common_args='-o StrictHostKeyChecking=no'\nansible_python_interpreter=/usr/bin/python3\n\n# Master nodes\n[masters]\nk3s-production-master-1 ansible_host=192.168.122.11\nk3s-production-master-2 ansible_host=192.168.122.12\nk3s-production-master-3 ansible_host=192.168.122.13\n\n# Worker nodes\n[workers]\nk3s-production-worker-1 ansible_host=192.168.122.21\nk3s-production-worker-2 ansible_host=192.168.122.22\nk3s-production-worker-3 ansible_host=192.168.122.23\nk3s-production-worker-4 ansible_host=192.168.122.24\nk3s-production-worker-5 ansible_host=192.168.122.25\nk3s-production-worker-6 ansible_host=192.168.122.26\n\n# Storage nodes\n[storage]\nk3s-production-storage-1 ansible_host=192.168.122.31\nk3s-production-storage-2 ansible_host=192.168.122.32\n\n# Load balancer nodes\n[load_balancers]\nk3s-production-lb-1 ansible_host=192.168.122.41\nk3s-production-lb-2 ansible_host=192.168.122.42\n\n# GPU nodes\n[gpu]\nk3s-production-gpu-1 ansible_host=192.168.122.51\n\n# K3s cluster\n[k3s_cluster:children]\nmasters\nworkers\nload_balancers\nstorage\ngpu\n\n# All nodes\n[all_nodes:children]\nk3s_cluster\n\n",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "inventory",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "a5d60a0b15ac6338d326d89bc59561ec145aca74e5f7c551d2158466ef3d20b9",
            "rendered": "# K3s Production Cluster - Ansible Inventory\n# Generated by Terraform\n\n[all:vars]\nansible_user=ubuntu\nansible_ssh_private_key_file=~/.ssh/id_rsa\nansible_ssh_common_args='-o StrictHostKeyChecking=no'\nansible_python_interpreter=/usr/bin/python3\n\n# Master nodes\n[masters]\nk3s-production-master-1 ansible_host=192.168.122.11\nk3s-production-master-2 ansible_host=192.168.122.12\nk3s-production-master-3 ansible_host=192.168.122.13\n\n# Worker nodes\n[workers]\nk3s-production-worker-1 ansible_host=192.168.122.21\nk3s-production-worker-2 ansible_host=192.168.122.22\nk3s-production-worker-3 ansible_host=192.168.122.23\nk3s-production-worker-4 ansible_host=192.168.122.24\nk3s-production-worker-5 ansible_host=192.168.122.25\nk3s-production-worker-6 ansible_host=192.168.122.26\n\n# Storage nodes\n[storage]\nk3s-production-storage-1 ansible_host=192.168.122.31\nk3s-production-storage-2 ansible_host=192.168.122.32\n\n# Load balancer nodes\n[load_balancers]\nk3s-production-lb-1 ansible_host=192.168.122.41\nk3s-production-lb-2 ansible_host=192.168.122.42\n\n# GPU nodes\n[gpu]\nk3s-production-gpu-1 ansible_host=192.168.122.51\n\n# K3s cluster\n[k3s_cluster:children]\nmasters\nworkers\nload_balancers\nstorage\ngpu\n\n# All nodes\n[all_nodes:children]\nk3s_cluster\n\n",
            "template": "# K3s Production Cluster - Ansible Inventory\n# Generated by Terraform\n\n[all:vars]\nansible_user=ubuntu\nansible_ssh_private_key_file=~/.ssh/id_rsa\nansible_ssh_common_args='-o StrictHostKeyChecking=no'\nansible_python_interpreter=/usr/bin/python3\n\n# Master nodes\n[masters]\nk3s-production-master-1 ansible_host=192.168.122.11\nk3s-production-master-2 ansible_host=192.168.122.12\nk3s-production-master-3 ansible_host=192.168.122.13\n\n# Worker nodes\n[workers]\nk3s-production-worker-1 ansible_host=192.168.122.21\nk3s-production-worker-2 ansible_host=192.168.122.22\nk3s-production-worker-3 ansible_host=192.168.122.23\nk3s-production-worker-4 ansible_host=192.168.122.24\nk3s-production-worker-5 ansible_host=192.168.122.25\nk3s-production-worker-6 ansible_host=192.168.122.26\n\n# Storage nodes\n[storage]\nk3s-production-storage-1 ansible_host=192.168.122.31\nk3s-production-storage-2 ansible_host=192.168.122.32\n\n# Load balancer nodes\n[load_balancers]\nk3s-production-lb-1 ansible_host=192.168.122.41\nk3s-production-lb-2 ansible_host=192.168.122.42\n\n# GPU nodes\n[gpu]\nk3s-production-gpu-1 ansible_host=192.168.122.51\n\n# K3s cluster\n[k3s_cluster:children]\nmasters\nworkers\nload_balancers\nstorage\ngpu\n\n# All nodes\n[all_nodes:children]\nk3s_cluster\n\n",
            "vars": {
              "lb1_ip": "192.168.122.41",
              "lb2_ip": "192.168.122.42",
              "master1_ip": "192.168.122.11",
              "master2_ip": "192.168.122.12",
              "master3_ip": "192.168.122.13",
              "storage1_ip": "192.168.122.31",
              "storage2_ip": "192.168.122.32",
              "worker1_ip": "192.168.122.21",
              "worker2_ip": "192.168.122.22",
              "worker3_ip": "192.168.122.23"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "load_balancers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-lb-1-cloudinit.iso;a7fb42d8-35da-48aa-b437-321b78cee784",
            "meta_data": "",
            "name": "k3s-production-lb-1-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.41/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-lb-1\nfqdn: k3s-production-lb-1.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-lb-1\n\n# Final message\nfinal_message: \"K3s node k3s-production-lb-1 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-lb-2-cloudinit.iso;5af70b4f-490b-4a78-b6df-440f5bfb9281",
            "meta_data": "",
            "name": "k3s-production-lb-2-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.42/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-lb-2\nfqdn: k3s-production-lb-2.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-lb-2\n\n# Final message\nfinal_message: \"K3s node k3s-production-lb-2 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "masters",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-master-1-cloudinit.iso;0e88e32f-177a-4c63-96ac-c6d50b5a4444",
            "meta_data": "",
            "name": "k3s-production-master-1-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.11/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-master-1\nfqdn: k3s-production-master-1.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-master-1\n\n# Final message\nfinal_message: \"K3s node k3s-production-master-1 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-master-2-cloudinit.iso;bbdf4b35-3cf4-4839-a665-19a47c2a49e3",
            "meta_data": "",
            "name": "k3s-production-master-2-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.12/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-master-2\nfqdn: k3s-production-master-2.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-master-2\n\n# Final message\nfinal_message: \"K3s node k3s-production-master-2 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-master-3-cloudinit.iso;3992b248-3fa1-47c3-9ec8-5ce8b53802bf",
            "meta_data": "",
            "name": "k3s-production-master-3-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.13/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-master-3\nfqdn: k3s-production-master-3.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-master-3\n\n# Final message\nfinal_message: \"K3s node k3s-production-master-3 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-storage-1-cloudinit.iso;0bac4a37-ddd1-4367-95dd-7c914f49686a",
            "meta_data": "",
            "name": "k3s-production-storage-1-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.31/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-storage-1\nfqdn: k3s-production-storage-1.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-storage-1\n\n# Final message\nfinal_message: \"K3s node k3s-production-storage-1 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-storage-2-cloudinit.iso;581d0673-aef0-4e2f-92d9-b78c12b86f34",
            "meta_data": "",
            "name": "k3s-production-storage-2-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.32/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-storage-2\nfqdn: k3s-production-storage-2.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-storage-2\n\n# Final message\nfinal_message: \"K3s node k3s-production-storage-2 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-worker-1-cloudinit.iso;d893a355-f817-4e90-9dc6-4223e2171b11",
            "meta_data": "",
            "name": "k3s-production-worker-1-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.21/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-worker-1\nfqdn: k3s-production-worker-1.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-worker-1\n\n# Final message\nfinal_message: \"K3s node k3s-production-worker-1 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-worker-2-cloudinit.iso;65427158-59f8-4654-9ed4-6108cc270b2c",
            "meta_data": "",
            "name": "k3s-production-worker-2-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.22/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-worker-2\nfqdn: k3s-production-worker-2.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-worker-2\n\n# Final message\nfinal_message: \"K3s node k3s-production-worker-2 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-worker-3-cloudinit.iso;e55645f3-834a-4fd1-bb93-6c2c8fed5ff8",
            "meta_data": "",
            "name": "k3s-production-worker-3-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.23/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-worker-3\nfqdn: k3s-production-worker-3.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker (using Ubuntu package to avoid conflicts)\n  - apt-get install -y docker.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm (using snap to avoid repository conflicts)\n  - snap install helm --classic\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-worker-3\n\n# Final message\nfinal_message: \"K3s node k3s-production-worker-3 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "load_balancers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-lb-1-cloudinit.iso;a7fb42d8-35da-48aa-b437-321b78cee784",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-lb-1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "8dfcb65b-24cd-4803-a07b-a0f7a7e69177",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 1024,
            "metadata": null,
            "name": "k3s-production-lb-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.41",
                  "fe80::5054:ff:fe62:27b8"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:62:27:B8",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 1,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.load_balancers",
            "libvirt_volume.base",
            "libvirt_volume.load_balancers"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-lb-2-cloudinit.iso;5af70b4f-490b-4a78-b6df-440f5bfb9281",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-lb-2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "0c83a4ba-5b0d-4109-8ea2-8bd807140a2e",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 1024,
            "metadata": null,
            "name": "k3s-production-lb-2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.42",
                  "fe80::5054:ff:fea2:198b"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:A2:19:8B",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 1,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.load_balancers",
            "libvirt_volume.base",
            "libvirt_volume.load_balancers"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "masters",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-master-1-cloudinit.iso;0e88e32f-177a-4c63-96ac-c6d50b5a4444",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-master-1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "6d40479d-d45f-4636-82c4-7e0e7b48086c",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-master-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.11",
                  "fe80::5054:ff:feee:4588"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:EE:45:88",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.masters",
            "libvirt_volume.base",
            "libvirt_volume.masters"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-master-2-cloudinit.iso;bbdf4b35-3cf4-4839-a665-19a47c2a49e3",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-master-2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "7481f1f0-15f8-4c8c-ac18-6aad4abcf270",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-master-2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.12",
                  "fe80::5054:ff:fe1e:18b8"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:1E:18:B8",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.masters",
            "libvirt_volume.base",
            "libvirt_volume.masters"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-master-3-cloudinit.iso;3992b248-3fa1-47c3-9ec8-5ce8b53802bf",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-master-3.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "2b726ff2-15f2-4524-888c-c0424bd5da94",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-master-3",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.13",
                  "fe80::5054:ff:fe9e:a678"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:9E:A6:78",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.masters",
            "libvirt_volume.base",
            "libvirt_volume.masters"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-storage-1-cloudinit.iso;0bac4a37-ddd1-4367-95dd-7c914f49686a",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-storage-1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "2568b474-6fbb-426d-b529-5862e83e53b4",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-storage-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.31",
                  "fe80::5054:ff:fe0e:d5a4"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:0E:D5:A4",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.storage",
            "libvirt_volume.base",
            "libvirt_volume.storage"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-storage-2-cloudinit.iso;581d0673-aef0-4e2f-92d9-b78c12b86f34",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-storage-2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "a013215e-8ec3-49a9-a799-77b1c9608785",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-storage-2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.32",
                  "fe80::5054:ff:fefa:d6a9"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:FA:D6:A9",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.storage",
            "libvirt_volume.base",
            "libvirt_volume.storage"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-worker-1-cloudinit.iso;d893a355-f817-4e90-9dc6-4223e2171b11",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-worker-1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "5bab150e-faec-487a-8414-b12cd11e6696",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "k3s-production-worker-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.21",
                  "fe80::5054:ff:fea6:93f"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:A6:09:3F",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 4,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.workers",
            "libvirt_volume.base",
            "libvirt_volume.workers"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-worker-2-cloudinit.iso;65427158-59f8-4654-9ed4-6108cc270b2c",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-worker-2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "51465359-1904-44c9-b5b5-d3c0c4665dad",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "k3s-production-worker-2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.22",
                  "fe80::5054:ff:feb2:4242"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:B2:42:42",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 4,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.workers",
            "libvirt_volume.base",
            "libvirt_volume.workers"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-worker-3-cloudinit.iso;e55645f3-834a-4fd1-bb93-6c2c8fed5ff8",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-worker-3.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "4f6428d1-b274-498a-81cf-0f976a53a125",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "k3s-production-worker-3",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.23",
                  "fe80::5054:ff:fed2:6d69"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:D2:6D:69",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 4,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.workers",
            "libvirt_volume.base",
            "libvirt_volume.workers"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "base",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "name": "ubuntu-24.04-cloudimg-amd64.img",
            "pool": "default",
            "size": 3758096384,
            "source": "/var/lib/libvirt/images/ubuntu-24.04-server-cloudimg-amd64.img",
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "load_balancers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-lb-1.qcow2",
            "name": "k3s-production-lb-1.qcow2",
            "pool": "default",
            "size": 10737418240,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-lb-2.qcow2",
            "name": "k3s-production-lb-2.qcow2",
            "pool": "default",
            "size": 10737418240,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "masters",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-master-1.qcow2",
            "name": "k3s-production-master-1.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-master-2.qcow2",
            "name": "k3s-production-master-2.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-master-3.qcow2",
            "name": "k3s-production-master-3.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-storage-1.qcow2",
            "name": "k3s-production-storage-1.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-storage-2.qcow2",
            "name": "k3s-production-storage-2.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-worker-1.qcow2",
            "name": "k3s-production-worker-1.qcow2",
            "pool": "default",
            "size": 32212254720,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-worker-2.qcow2",
            "name": "k3s-production-worker-2.qcow2",
            "pool": "default",
            "size": 32212254720,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-worker-3.qcow2",
            "name": "k3s-production-worker-3.qcow2",
            "pool": "default",
            "size": 32212254720,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "inventory",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "# K3s Production Cluster - Ansible Inventory\n# Generated by Terraform\n\n[all:vars]\nansible_user=ubuntu\nansible_ssh_private_key_file=~/.ssh/id_rsa\nansible_ssh_common_args='-o StrictHostKeyChecking=no'\nansible_python_interpreter=/usr/bin/python3\n\n# Master nodes\n[masters]\nk3s-production-master-1 ansible_host=192.168.122.11\nk3s-production-master-2 ansible_host=192.168.122.12\nk3s-production-master-3 ansible_host=192.168.122.13\n\n# Worker nodes\n[workers]\nk3s-production-worker-1 ansible_host=192.168.122.21\nk3s-production-worker-2 ansible_host=192.168.122.22\nk3s-production-worker-3 ansible_host=192.168.122.23\nk3s-production-worker-4 ansible_host=192.168.122.24\nk3s-production-worker-5 ansible_host=192.168.122.25\nk3s-production-worker-6 ansible_host=192.168.122.26\n\n# Storage nodes\n[storage]\nk3s-production-storage-1 ansible_host=192.168.122.31\nk3s-production-storage-2 ansible_host=192.168.122.32\n\n# Load balancer nodes\n[load_balancers]\nk3s-production-lb-1 ansible_host=192.168.122.41\nk3s-production-lb-2 ansible_host=192.168.122.42\n\n# GPU nodes\n[gpu]\nk3s-production-gpu-1 ansible_host=192.168.122.51\n\n# K3s cluster\n[k3s_cluster:children]\nmasters\nworkers\nload_balancers\nstorage\ngpu\n\n# All nodes\n[all_nodes:children]\nk3s_cluster\n\n",
            "content_base64": null,
            "content_base64sha256": "pdYKCxWsYzjTJtibxZVh7BRaynTl98VR0hWEZu89ILk=",
            "content_base64sha512": "RAva9FxvbsdAyhrIFZlYNRKylHxECo/XyRzTG4lf0vfbjn+H68GgNvuTLgLCo1AxGUelQ24PX3TJU7Qyg4xIjQ==",
            "content_md5": "0df59776fece3c25b63782e7d579329f",
            "content_sha1": "d5b1213a2203db4c56f2052d115999557690edf2",
            "content_sha256": "a5d60a0b15ac6338d326d89bc59561ec145aca74e5f7c551d2158466ef3d20b9",
            "content_sha512": "440bdaf45c6f6ec740ca1ac81599583512b2947c440a8fd7c91cd31b895fd2f7db8e7f87ebc1a036fb932e02c2a350311947a5436e0f5f74c953b432838c488d",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./../ansible/inventory.yml",
            "id": "d5b1213a2203db4c56f2052d115999557690edf2",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "identity_schema_version": 0,
          "dependencies": [
            "data.template_file.inventory"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
