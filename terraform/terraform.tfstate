{
  "version": 4,
  "terraform_version": "1.13.2",
  "serial": 33,
  "lineage": "6ce1beb3-0184-c08a-fd0c-3c663a63ffcb",
  "outputs": {
    "cluster_info": {
      "value": {
        "cluster_name": "k3s-production",
        "dns": "8.8.8.8",
        "gateway": "192.168.122.1",
        "load_balancers": 2,
        "masters": 3,
        "network": "default",
        "storage": 2,
        "total_nodes": 10,
        "workers": 3
      },
      "type": [
        "object",
        {
          "cluster_name": "string",
          "dns": "string",
          "gateway": "string",
          "load_balancers": "number",
          "masters": "number",
          "network": "string",
          "storage": "number",
          "total_nodes": "number",
          "workers": "number"
        }
      ]
    },
    "load_balancer_nodes": {
      "value": [
        {
          "ip": "192.168.122.41",
          "memory": 1024,
          "name": "k3s-production-lb-1",
          "vcpu": 1
        },
        {
          "ip": "192.168.122.42",
          "memory": 1024,
          "name": "k3s-production-lb-2",
          "vcpu": 1
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ],
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ]
        ]
      ]
    },
    "master_nodes": {
      "value": [
        {
          "ip": "192.168.122.11",
          "memory": 4096,
          "name": "k3s-production-master-1",
          "vcpu": 2
        },
        {
          "ip": "192.168.122.12",
          "memory": 4096,
          "name": "k3s-production-master-2",
          "vcpu": 2
        },
        {
          "ip": "192.168.122.13",
          "memory": 4096,
          "name": "k3s-production-master-3",
          "vcpu": 2
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ],
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ],
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ]
        ]
      ]
    },
    "storage_nodes": {
      "value": [
        {
          "ip": "192.168.122.31",
          "memory": 4096,
          "name": "k3s-production-storage-1",
          "vcpu": 2
        },
        {
          "ip": "192.168.122.32",
          "memory": 4096,
          "name": "k3s-production-storage-2",
          "vcpu": 2
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ],
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ]
        ]
      ]
    },
    "vm_ips": {
      "value": {
        "k3s-production-lb-1": "192.168.122.41",
        "k3s-production-lb-2": "192.168.122.42",
        "k3s-production-master-1": "192.168.122.11",
        "k3s-production-master-2": "192.168.122.12",
        "k3s-production-master-3": "192.168.122.13",
        "k3s-production-storage-1": "192.168.122.31",
        "k3s-production-storage-2": "192.168.122.32",
        "k3s-production-worker-1": "192.168.122.21",
        "k3s-production-worker-2": "192.168.122.22",
        "k3s-production-worker-3": "192.168.122.23"
      },
      "type": [
        "object",
        {
          "k3s-production-lb-1": "string",
          "k3s-production-lb-2": "string",
          "k3s-production-master-1": "string",
          "k3s-production-master-2": "string",
          "k3s-production-master-3": "string",
          "k3s-production-storage-1": "string",
          "k3s-production-storage-2": "string",
          "k3s-production-worker-1": "string",
          "k3s-production-worker-2": "string",
          "k3s-production-worker-3": "string"
        }
      ]
    },
    "worker_nodes": {
      "value": [
        {
          "ip": "192.168.122.21",
          "memory": 8192,
          "name": "k3s-production-worker-1",
          "vcpu": 4
        },
        {
          "ip": "192.168.122.22",
          "memory": 8192,
          "name": "k3s-production-worker-2",
          "vcpu": 4
        },
        {
          "ip": "192.168.122.23",
          "memory": 8192,
          "name": "k3s-production-worker-3",
          "vcpu": 4
        }
      ],
      "type": [
        "tuple",
        [
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ],
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ],
          [
            "object",
            {
              "ip": "string",
              "memory": "number",
              "name": "string",
              "vcpu": "number"
            }
          ]
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "template_file",
      "name": "inventory",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "d07b63f11838384b5db869d3b93967c8025e411058697d60a30f399d1afc6919",
            "rendered": "# K3s Production Cluster - Ansible Inventory\n# Generated by Terraform\n\nall:\n  children:\n    masters:\n      hosts:\n        k3s-production-master-1:\n          ansible_host: 192.168.122.11\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-master-2:\n          ansible_host: 192.168.122.12\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-master-3:\n          ansible_host: 192.168.122.13\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: master\n        \n    workers:\n      hosts:\n        k3s-production-worker-1:\n          ansible_host: 192.168.122.21\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-worker-2:\n          ansible_host: 192.168.122.22\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-worker-3:\n          ansible_host: 192.168.122.23\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: worker\n        \n    storage:\n      hosts:\n        k3s-production-storage-1:\n          ansible_host: 192.168.122.31\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-storage-2:\n          ansible_host: 192.168.122.32\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: storage\n        \n    load_balancers:\n      hosts:\n        k3s-production-lb-1:\n          ansible_host: 192.168.122.41\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-lb-2:\n          ansible_host: 192.168.122.42\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: load_balancer\n",
            "template": "# K3s Production Cluster - Ansible Inventory\n# Generated by Terraform\n\nall:\n  children:\n    masters:\n      hosts:\n        k3s-production-master-1:\n          ansible_host: ${master1_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-master-2:\n          ansible_host: ${master2_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-master-3:\n          ansible_host: ${master3_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: master\n        \n    workers:\n      hosts:\n        k3s-production-worker-1:\n          ansible_host: ${worker1_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-worker-2:\n          ansible_host: ${worker2_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-worker-3:\n          ansible_host: ${worker3_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: worker\n        \n    storage:\n      hosts:\n        k3s-production-storage-1:\n          ansible_host: ${storage1_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-storage-2:\n          ansible_host: ${storage2_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: storage\n        \n    load_balancers:\n      hosts:\n        k3s-production-lb-1:\n          ansible_host: ${lb1_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-lb-2:\n          ansible_host: ${lb2_ip}\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: load_balancer\n",
            "vars": {
              "lb1_ip": "192.168.122.41",
              "lb2_ip": "192.168.122.42",
              "master1_ip": "192.168.122.11",
              "master2_ip": "192.168.122.12",
              "master3_ip": "192.168.122.13",
              "storage1_ip": "192.168.122.31",
              "storage2_ip": "192.168.122.32",
              "worker1_ip": "192.168.122.21",
              "worker2_ip": "192.168.122.22",
              "worker3_ip": "192.168.122.23"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "load_balancers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-lb-1-cloudinit.iso;fe54140c-266a-4629-af2b-1f9a939e0163",
            "meta_data": "",
            "name": "k3s-production-lb-1-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.41/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-lb-1\nfqdn: k3s-production-lb-1.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-lb-1\n\n# Final message\nfinal_message: \"K3s node k3s-production-lb-1 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-lb-2-cloudinit.iso;f100ecbe-b370-424e-bade-a3a48bae8bd3",
            "meta_data": "",
            "name": "k3s-production-lb-2-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.42/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-lb-2\nfqdn: k3s-production-lb-2.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-lb-2\n\n# Final message\nfinal_message: \"K3s node k3s-production-lb-2 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "masters",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-master-1-cloudinit.iso;48d57436-7a77-4f85-914a-64d20de9700d",
            "meta_data": "",
            "name": "k3s-production-master-1-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.11/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-master-1\nfqdn: k3s-production-master-1.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-master-1\n\n# Final message\nfinal_message: \"K3s node k3s-production-master-1 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-master-2-cloudinit.iso;e305e245-9895-4b92-b420-350e823607ac",
            "meta_data": "",
            "name": "k3s-production-master-2-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.12/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-master-2\nfqdn: k3s-production-master-2.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-master-2\n\n# Final message\nfinal_message: \"K3s node k3s-production-master-2 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-master-3-cloudinit.iso;fa29de38-bf5a-4888-8000-fc34b73ebf55",
            "meta_data": "",
            "name": "k3s-production-master-3-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.13/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-master-3\nfqdn: k3s-production-master-3.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-master-3\n\n# Final message\nfinal_message: \"K3s node k3s-production-master-3 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-storage-1-cloudinit.iso;9ba3e655-c13e-4e1c-bee5-7fb000fdd411",
            "meta_data": "",
            "name": "k3s-production-storage-1-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.31/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-storage-1\nfqdn: k3s-production-storage-1.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-storage-1\n\n# Final message\nfinal_message: \"K3s node k3s-production-storage-1 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-storage-2-cloudinit.iso;b104fb35-6566-44a0-9a19-361a76e1eeb3",
            "meta_data": "",
            "name": "k3s-production-storage-2-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.32/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-storage-2\nfqdn: k3s-production-storage-2.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-storage-2\n\n# Final message\nfinal_message: \"K3s node k3s-production-storage-2 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_cloudinit_disk",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-worker-1-cloudinit.iso;a0bafc91-40e3-413a-a66f-a0aeebfb16c2",
            "meta_data": "",
            "name": "k3s-production-worker-1-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.21/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-worker-1\nfqdn: k3s-production-worker-1.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-worker-1\n\n# Final message\nfinal_message: \"K3s node k3s-production-worker-1 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-worker-2-cloudinit.iso;a5d20f0b-aec3-4a3e-836e-603d07e2451f",
            "meta_data": "",
            "name": "k3s-production-worker-2-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.22/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-worker-2\nfqdn: k3s-production-worker-2.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-worker-2\n\n# Final message\nfinal_message: \"K3s node k3s-production-worker-2 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "/var/lib/libvirt/images/k3s-production-worker-3-cloudinit.iso;27b37059-5704-4f27-8f5e-4febba3a539f",
            "meta_data": "",
            "name": "k3s-production-worker-3-cloudinit.iso",
            "network_config": "# K3s Production Cluster - Cloud Init Network Config\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nnetwork:\n  version: 2\n  ethernets:\n    primary-nic:\n      match:\n        name: en*\n      dhcp4: false\n      dhcp6: false\n      addresses:\n        - 192.168.122.23/24\n      gateway4: 192.168.122.1\n      nameservers:\n        addresses:\n          - 8.8.8.8\n          - 8.8.4.4",
            "pool": "default",
            "user_data": "#cloud-config\n# K3s Production Cluster - Cloud Init User Data\n# Based on Ubuntu 24.04 LTS cloud-init best practices\n\nhostname: k3s-production-worker-3\nfqdn: k3s-production-worker-3.k3s.local\nmanage_etc_hosts: true\n\nusers:\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCWpqHgUfWMVx+m0LwU7gcuyI/Aw/9/qnPrfTJyH+I2AqbaKDCfWey6D+MN4ATf0DMxQhAeZmnMp1qYaNbZVHd4oW+4DI7Z2I5DXb7CtNibHpa9kwviY//V4YURVTjfhSfhDrqAjZSAFd3nKHnTpm/ISxph2Lw8NP29sKEAyFpMc5BWKkHNWULiAAm3gQWSYDPWn8jc89bpWzZIS3CV4uZXhu4n5v1axAd6KGo3oyOWb3/22U2SOqWRyLCQbq2LzrjcwcrgX/z0VOCtVbqs4v3llZZuuflmwpWzXs/NPsJAe6GEKOpxxwtFs8xyP3aith1+UA6AaUd7/OruhgSRV0sMIUXJfQuwxXUnKlH2K0+XMwbglhXpdwfu7p9cOBpS+xxSkCfJKL15JE/FVsODPXDbcS9D9IHolSfIU/R3/3Gtcly6vRtYk8ZNT/TWKlhyCKjUBtobzZMACBcjGQYLqekr9znJtUsXBjkRnO4CQDy7AR6hbERv2qwWP4x8Iv3xkufH9nPLCoIN3wr64KFMeqg9CiOtfZZO9oMEwF7YuGjT+Og6zOkmgippQm3SZ/zURui6rBslicStevX/JFoaN19ZMaFhR1c5u++VzWs3oR63UEdnzRrXPYAXgQGf9sLFQ7NkfoC9AwSSDdMoiMDK9485zEzpYUucczdRq9oQpTFpNQ== bogdan@epic\n\n\n# Disable password authentication\nssh_pwauth: false\n\n# Update system packages\npackage_update: true\npackage_upgrade: true\n\n# Install essential packages\npackages:\n  - curl\n  - wget\n  - git\n  - vim\n  - htop\n  - net-tools\n  - dnsutils\n  - jq\n  - unzip\n  - apt-transport-https\n  - ca-certificates\n  - gnupg\n  - lsb-release\n  - qemu-guest-agent\n\n# Configure timezone\ntimezone: UTC\n\n# Run commands on first boot\nruncmd:\n  # Enable qemu-guest-agent\n  - systemctl enable --now qemu-guest-agent\n  \n  # Update system\n  - apt-get update\n  - apt-get upgrade -y\n  \n  # Install Docker\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n  - echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\$(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n  - apt-get update\n  - apt-get install -y docker-ce docker-ce-cli containerd.io\n  - systemctl enable docker\n  - systemctl start docker\n  - usermod -aG docker ubuntu\n  \n  # Install kubectl\n  - curl -LO \"https://dl.k8s.io/release/\\$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n  - chmod +x kubectl\n  - mv kubectl /usr/local/bin/\n  \n  # Install Helm\n  - curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg \u003e /dev/null\n  - echo \"deb [arch=\\$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list\n  - apt-get update\n  - apt-get install -y helm\n  \n  # Configure system limits\n  - echo \"* soft nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nofile 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* soft nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  - echo \"* hard nproc 65536\" \u003e\u003e /etc/security/limits.conf\n  \n  # Configure kernel parameters for Kubernetes\n  - echo \"net.bridge.bridge-nf-call-iptables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.bridge.bridge-nf-call-ip6tables = 1\" \u003e\u003e /etc/sysctl.conf\n  - echo \"net.ipv4.ip_forward = 1\" \u003e\u003e /etc/sysctl.conf\n  - sysctl -p\n  \n  # Load required kernel modules\n  - echo \"br_netfilter\" \u003e\u003e /etc/modules\n  - echo \"overlay\" \u003e\u003e /etc/modules\n  - modprobe br_netfilter\n  - modprobe overlay\n  \n  # Disable swap\n  - swapoff -a\n  - sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n  \n  # Configure containerd\n  - mkdir -p /etc/containerd\n  - containerd config default | tee /etc/containerd/config.toml\n  - sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\n  - systemctl restart containerd\n  - systemctl enable containerd\n  \n  # Create k3s user\n  - useradd -r -s /bin/false -m -d /var/lib/rancher/k3s k3s\n  \n  # Set hostname\n  - hostnamectl set-hostname k3s-production-worker-3\n\n# Final message\nfinal_message: \"K3s node k3s-production-worker-3 is ready! SSH access available for ubuntu user.\"\n"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "load_balancers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-lb-1-cloudinit.iso;fe54140c-266a-4629-af2b-1f9a939e0163",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-lb-1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "300f286a-064c-4561-a519-6767762a705a",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 1024,
            "metadata": null,
            "name": "k3s-production-lb-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.41",
                  "fe80::5054:ff:fe3a:8c6f"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:3A:8C:6F",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 1,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.load_balancers",
            "libvirt_volume.base",
            "libvirt_volume.load_balancers"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-lb-2-cloudinit.iso;f100ecbe-b370-424e-bade-a3a48bae8bd3",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-lb-2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "01c6c418-8349-4f22-8523-fcaf3b5462b7",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 1024,
            "metadata": null,
            "name": "k3s-production-lb-2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.42",
                  "fe80::5054:ff:fe4a:cb99"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:4A:CB:99",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 1,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.load_balancers",
            "libvirt_volume.base",
            "libvirt_volume.load_balancers"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "masters",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-master-1-cloudinit.iso;48d57436-7a77-4f85-914a-64d20de9700d",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-master-1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "65687b00-716e-479d-861e-f274d81e2d97",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-master-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.11",
                  "fe80::5054:ff:fe7a:ef1a"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:7A:EF:1A",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.masters",
            "libvirt_volume.base",
            "libvirt_volume.masters"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-master-2-cloudinit.iso;e305e245-9895-4b92-b420-350e823607ac",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-master-2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "55bedab2-e760-4529-bb93-be04d52cac57",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-master-2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.12",
                  "fe80::5054:ff:fe46:e107"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:46:E1:07",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.masters",
            "libvirt_volume.base",
            "libvirt_volume.masters"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-master-3-cloudinit.iso;fa29de38-bf5a-4888-8000-fc34b73ebf55",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-master-3.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "82daf19a-bc3c-443a-85ef-f9bfa08b63a7",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-master-3",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.13",
                  "fe80::5054:ff:feda:fb91"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:DA:FB:91",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.masters",
            "libvirt_volume.base",
            "libvirt_volume.masters"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-storage-1-cloudinit.iso;9ba3e655-c13e-4e1c-bee5-7fb000fdd411",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-storage-1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "838e219b-e3bb-4d28-a651-f159181a1b35",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-storage-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.31",
                  "fe80::5054:ff:fe02:30ee"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:02:30:EE",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.storage",
            "libvirt_volume.base",
            "libvirt_volume.storage"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-storage-2-cloudinit.iso;b104fb35-6566-44a0-9a19-361a76e1eeb3",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-storage-2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "57ce7c13-aacd-4c72-82af-a13da6616e6e",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 4096,
            "metadata": null,
            "name": "k3s-production-storage-2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.32",
                  "fe80::5054:ff:fed2:4079"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:D2:40:79",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 2,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.storage",
            "libvirt_volume.base",
            "libvirt_volume.storage"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_domain",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-worker-1-cloudinit.iso;a0bafc91-40e3-413a-a66f-a0aeebfb16c2",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-worker-1.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "fa6ea424-ddb0-4fd7-9d54-38b747a76c94",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "k3s-production-worker-1",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.21",
                  "fe80::5054:ff:fef2:99f"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:F2:09:9F",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 4,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.workers",
            "libvirt_volume.base",
            "libvirt_volume.workers"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-worker-2-cloudinit.iso;a5d20f0b-aec3-4a3e-836e-603d07e2451f",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-worker-2.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "0c7e5421-77dd-44d6-8c88-9ce8905a5832",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "k3s-production-worker-2",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.22",
                  "fe80::5054:ff:febe:4174"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:BE:41:74",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 4,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.workers",
            "libvirt_volume.base",
            "libvirt_volume.workers"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arch": "x86_64",
            "autostart": false,
            "boot_device": [],
            "cloudinit": "/var/lib/libvirt/images/k3s-production-worker-3-cloudinit.iso;27b37059-5704-4f27-8f5e-4febba3a539f",
            "cmdline": null,
            "console": [
              {
                "source_host": "127.0.0.1",
                "source_path": "",
                "source_service": "0",
                "target_port": "0",
                "target_type": "serial",
                "type": "pty"
              }
            ],
            "coreos_ignition": null,
            "cpu": [
              {
                "mode": "custom"
              }
            ],
            "description": "",
            "disk": [
              {
                "block_device": "",
                "file": "",
                "scsi": false,
                "url": "",
                "volume_id": "/var/lib/libvirt/images/k3s-production-worker-3.qcow2",
                "wwn": ""
              }
            ],
            "emulator": "/usr/bin/qemu-system-x86_64",
            "filesystem": [],
            "firmware": null,
            "fw_cfg_name": "opt/com.coreos/config",
            "graphics": [
              {
                "autoport": true,
                "listen_address": "127.0.0.1",
                "listen_type": "address",
                "type": "spice",
                "websocket": 0
              }
            ],
            "id": "b147d633-c319-4275-864e-97c77359b762",
            "initrd": "",
            "kernel": "",
            "machine": "pc",
            "memory": 8192,
            "metadata": null,
            "name": "k3s-production-worker-3",
            "network_interface": [
              {
                "addresses": [
                  "192.168.122.23",
                  "fe80::5054:ff:fe8e:d397"
                ],
                "bridge": "",
                "hostname": "",
                "mac": "52:54:00:8E:D3:97",
                "macvtap": "",
                "network_id": "5de2b6a1-7653-4ecb-8d28-9cdb560e0d88",
                "network_name": "default",
                "passthrough": "",
                "private": "",
                "vepa": "",
                "wait_for_lease": true
              }
            ],
            "nvram": null,
            "qemu_agent": true,
            "running": true,
            "timeouts": null,
            "tpm": [],
            "type": "kvm",
            "vcpu": 4,
            "video": [],
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "libvirt_cloudinit_disk.workers",
            "libvirt_volume.base",
            "libvirt_volume.workers"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "base",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base_volume_id": null,
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "name": "ubuntu-24.04-cloudimg-amd64.img",
            "pool": "default",
            "size": 3758096384,
            "source": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "load_balancers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-lb-1.qcow2",
            "name": "k3s-production-lb-1.qcow2",
            "pool": "default",
            "size": 10737418240,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-lb-2.qcow2",
            "name": "k3s-production-lb-2.qcow2",
            "pool": "default",
            "size": 10737418240,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "masters",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-master-1.qcow2",
            "name": "k3s-production-master-1.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-master-2.qcow2",
            "name": "k3s-production-master-2.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-master-3.qcow2",
            "name": "k3s-production-master-3.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-storage-1.qcow2",
            "name": "k3s-production-storage-1.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-storage-2.qcow2",
            "name": "k3s-production-storage-2.qcow2",
            "pool": "default",
            "size": 21474836480,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "libvirt_volume",
      "name": "workers",
      "provider": "provider[\"registry.terraform.io/dmacvicar/libvirt\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-worker-1.qcow2",
            "name": "k3s-production-worker-1.qcow2",
            "pool": "default",
            "size": 32212254720,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-worker-2.qcow2",
            "name": "k3s-production-worker-2.qcow2",
            "pool": "default",
            "size": 32212254720,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "base_volume_id": "/var/lib/libvirt/images/ubuntu-24.04-cloudimg-amd64.img",
            "base_volume_name": null,
            "base_volume_pool": null,
            "format": "qcow2",
            "id": "/var/lib/libvirt/images/k3s-production-worker-3.qcow2",
            "name": "k3s-production-worker-3.qcow2",
            "pool": "default",
            "size": 32212254720,
            "source": null,
            "xml": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "libvirt_volume.base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "inventory",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "# K3s Production Cluster - Ansible Inventory\n# Generated by Terraform\n\nall:\n  children:\n    masters:\n      hosts:\n        k3s-production-master-1:\n          ansible_host: 192.168.122.11\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-master-2:\n          ansible_host: 192.168.122.12\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-master-3:\n          ansible_host: 192.168.122.13\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: master\n        \n    workers:\n      hosts:\n        k3s-production-worker-1:\n          ansible_host: 192.168.122.21\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-worker-2:\n          ansible_host: 192.168.122.22\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-worker-3:\n          ansible_host: 192.168.122.23\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: worker\n        \n    storage:\n      hosts:\n        k3s-production-storage-1:\n          ansible_host: 192.168.122.31\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-storage-2:\n          ansible_host: 192.168.122.32\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: storage\n        \n    load_balancers:\n      hosts:\n        k3s-production-lb-1:\n          ansible_host: 192.168.122.41\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n        k3s-production-lb-2:\n          ansible_host: 192.168.122.42\n          ansible_user: ubuntu\n          ansible_ssh_private_key_file: ~/.ssh/k3s-cluster\n      vars:\n        node_role: load_balancer\n",
            "content_base64": null,
            "content_base64sha256": "0Htj8Rg4OEtduGnTuTlnyAJeQRBYaX1gow85nRr8aRk=",
            "content_base64sha512": "toeAzgmvSOGmS+LlYdh0UpRu35W/H2kMeRMXIfgneEMb0BTwIDH1XhRg2UkYjiEbkw8IRxaRX4dm0T38Mp+pTw==",
            "content_md5": "4b8671bb27616aeb72c7f286b857737f",
            "content_sha1": "069742a87066ebd0ede9dd26be3dcc2fe181b188",
            "content_sha256": "d07b63f11838384b5db869d3b93967c8025e411058697d60a30f399d1afc6919",
            "content_sha512": "b68780ce09af48e1a64be2e561d87452946edf95bf1f690c79131721f82778431bd014f02031f55e1460d949188e211b930f084716915f8766d13dfc329fa94f",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./../ansible/inventory.yml",
            "id": "069742a87066ebd0ede9dd26be3dcc2fe181b188",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "sensitive_content"
              }
            ]
          ],
          "identity_schema_version": 0,
          "dependencies": [
            "data.template_file.inventory"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
